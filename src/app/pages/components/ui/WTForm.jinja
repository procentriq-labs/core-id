{#def
    form: StarletteForm,
    className: str = "",
    method: str = "POST",
    action: str = "",
    enctype: str = "application/x-www-form-urlencoded"
#}

{% macro error_classes(field) %}
  {%- if field.errors -%}
    border-red-600 dark:border-red-300 ring-red-600 dark:ring-red-300
  {%- endif -%}
{% endmacro %}

{% macro render_field(field) %}
  {% if field.type == 'FormField' %}
    {% for subfield in field %}
      {{ render_field(subfield) }}
    {% endfor %}
  {% else %}
    <FormItem>
      {% if not field.flags.hidden %}
        <FormLabel htmlFor="{{ field.label.field_id }}" :error="{{ field.errors }}">
          {{ field.label.text }}
        </FormLabel>
      {% endif %}

      <FormControl>
        {% set field_class = "flex h-10 w-full rounded-md border bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 outline-none focus:outline-none focus:border-zinc-950 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300 dark:focus:border-zinc-300 " + error_classes(field) %}

        {% if field.type in ['StringField', 'EmailField', 'IntegerField'] %}
          {{ field(class_=field_class) }}

          {# Password field #}
        {% elif field.type == 'PasswordField' %}
          {{ field(class_=field_class + " placeholder:text-zinc-500 dark:placeholder:text-zinc-400") }}


          {# Select field #}
        {% elif field.type == 'SelectField' %}
          {{ field(class_=field_class + " appearance-none") }}

          {# File field #}
        {% elif field.type == 'FileField' %}
          {{ field(class_=field_class + " file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 file:border-0 dark:file:text-zinc-50") }}

          {# TextArea field #}
        {% elif field.type == 'TextAreaField' %}
          {% set textarea_class = "flex min-h-[80px] w-full rounded-md border bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 outline-none focus:outline-none focus:border-zinc-950 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300 dark:focus:border-zinc-300 " + error_classes(field) %}
          {{ field(class_=textarea_class )}}

          {# Boolean field (Checkbox) #}
        {% elif field.type == 'BooleanField' %}
          <div class="flex items-center space-x-2">
            {{ field(class_="text-black accent-black rounded border-zinc-200 dark:border-zinc-50 focus:ring-2 focus:ring-offset-2 focus:ring-black dark:focus:ring-white dark:focus:ring-2 dark:focus:ring-offset-2") }}
            <span class="text-sm">{{ field.label.text }}</span>
          </div>

          {# Radio field #}
        {% elif field.type == 'RadioField' %}
          <div class="flex flex-col space-y-2">
            {% for subfield in field %}
              <div class="flex items-center space-x-2">
                {{ subfield(class_="border-zinc-200 text-black accent-black focus:ring-black dark:border-zinc-700 dark:bg-zinc-950 dark:focus:ring-zinc-300") }}
                <span class="text-sm">{{ subfield.label.text }}</span>
              </div>
            {% endfor %}
          </div>

          {# Fallback for other field types #}
        {% else %}
          {{ field(class_=field_class) }}
        {% endif %}
      </FormControl>
      <FormDescription>{{ field.description }}</FormDescription>

      {% if field.errors %}
        <FormMessage>{{ field.errors[0] }}</FormMessage>
      {% endif %}
    </FormItem>
  {% endif %}
{% endmacro %}

<form
    method="{{ method }}"
    action="{{ action }}"
    enctype="{{ enctype }}"
    class="{{ className }} space-y-4"
    {{ attrs.render() }}
>
  {% for field in form %}
    {{ render_field(field) }}
  {% endfor %}
  {{ content }}
</form>